{"version":3,"file":"static/css/main.10d03bda.css","mappings":"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","sources":["index.css","components/Sidebar/index.scss","components/assets/breakpoints/breakpoints.scss","components/game-mobile/index.scss","components/Games/index.scss","components/Cases%20games/index.scss","app.scss","components/Contact/index.scss"],"sourcesContent":["body {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n","@import \"../assets/breakpoints/breakpoints.scss\";\r\n$text-color:#fff;\r\n$background: #181818;\r\n\r\n.nav-bar {\r\n    background: $background;\r\n    width: 120px;\r\n    height: 100%;\r\n    position: absolute;\r\n    top: 0;\r\n    z-index: 3;\r\n    min-height: 500px;\r\n    img{\r\n      width: 8rem;\r\n    }\r\n    @include media(\"<=tablet\"){\r\n      display: none;\r\n    }\r\n    \r\n    h1,li{\r\n      color:$text-color;\r\n      text-align: center;\r\n    }\r\n  \r\n    .section-1 {\r\n      display: block;\r\n      text-align: center;\r\n      position: absolute;\r\n      height: 210px;\r\n      top: 50%;\r\n      margin-top: -80px;\r\n      width: 100%;\r\n\r\n     \r\n      a {\r\n        font-size: 22px;\r\n        color: #4d4d4e;\r\n        display: block;\r\n        line-height: 51px;\r\n        height: 51px;\r\n        position: relative;\r\n        text-decoration: none;\r\n  \r\n      }\r\n  \r\n    ul {\r\n      position: absolute;\r\n      bottom: 20px;\r\n      width: 100%;\r\n      display: block;\r\n      padding: 0;\r\n      list-style: none;\r\n      text-align: center;\r\n      margin: 0;\r\n  \r\n      li {\r\n        a {\r\n          padding: 7px 0;\r\n          display: block;\r\n          font-size: 15px;\r\n          line-height: 16px;\r\n          color: #4d4d4e;\r\n  \r\n          &:hover {\r\n            color: #ffd700;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .section-2 {\r\n    display: block;\r\n    text-align: center;\r\n    position: absolute;\r\n    height: 210px;\r\n    top: 150%;\r\n    margin-top: -80px;\r\n    width: 100%;\r\n\r\n   \r\n    a {\r\n      font-size: 22px;\r\n      color: #4d4d4e;\r\n      display: block;\r\n      line-height: 51px;\r\n      height: 51px;\r\n      position: relative;\r\n      text-decoration: none;\r\n\r\n    }\r\n\r\n  ul {\r\n    position: absolute;\r\n    bottom: 20px;\r\n    width: 100%;\r\n    display: block;\r\n    padding: 0;\r\n    list-style: none;\r\n    text-align: center;\r\n    margin: 0;\r\n\r\n    li {\r\n      a {\r\n        padding: 7px 0;\r\n        display: block;\r\n        font-size: 15px;\r\n        line-height: 16px;\r\n        color: #4d4d4e;\r\n\r\n        &:hover {\r\n          color: #ffd700;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n.section-3{\r\n  display: block;\r\n  text-align: center;\r\n  position: absolute;\r\n  height: 210px;\r\n  top: 250%;\r\n  margin-top: -80px;\r\n  width: 100%;\r\n\r\n \r\n  a {\r\n    font-size: 22px;\r\n    color: #4d4d4e;\r\n    display: block;\r\n    line-height: 51px;\r\n    height: 51px;\r\n    position: relative;\r\n    text-decoration: none;\r\n\r\n  }\r\n\r\nul {\r\n  position: absolute;\r\n  bottom: 20px;\r\n  width: 100%;\r\n  display: block;\r\n  padding: 0;\r\n  list-style: none;\r\n  text-align: center;\r\n  margin: 0;\r\n\r\n  li {\r\n    a {\r\n      padding: 7px 0;\r\n      display: block;\r\n      font-size: 15px;\r\n      line-height: 16px;\r\n      color: #4d4d4e;\r\n\r\n      &:hover {\r\n        color: #ffd700;\r\n      }\r\n    }\r\n  }\r\n}\r\n}\r\n}","$breakpoints: (\r\n  \"phone\": 360px,\r\n  \"tablet\": 768px,\r\n  \"desktop\": 1366px,\r\n  \"LGdesktop\": 1920px\r\n) !default;\r\n\r\n///\r\n/// Creates a list of static expressions or media types\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @example scss - Creates a single media type (screen)\r\n///  $media-expressions: ('screen': 'screen');\r\n///\r\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\r\n///  $media-expressions: (\r\n///\t\t'retina2x': (\r\n///\t\t\t'(-webkit-min-device-pixel-ratio: 2)',\r\n///\t\t\t'(min-resolution: 192dpi)'\r\n///\t\t)\r\n///\t);\r\n///\r\n$media-expressions: (\r\n  \"screen\": \"screen\",\r\n  \"print\": \"print\",\r\n  \"handheld\": \"handheld\",\r\n  \"retina2x\": (\r\n    \"(-webkit-min-device-pixel-ratio: 2)\",\r\n    \"(min-resolution: 192dpi)\"\r\n  ),\r\n  \"retina3x\": (\r\n    \"(-webkit-min-device-pixel-ratio: 3)\",\r\n    \"(min-resolution: 350dpi)\"\r\n  )\r\n) !default;\r\n\r\n///\r\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @example scss - Interval for pixels is defined as `1` by default\r\n///  @include media(\">128px\") {}\r\n///\r\n///\t /* Generates: */\r\n///\t @media (min-width: 129px) {}\r\n///\r\n/// @example scss - Interval for ems is defined as `0.01` by default\r\n///  @include media(\">20em\") {}\r\n///\r\n///\t /* Generates: */\r\n///\t @media (min-width: 20.01em) {}\r\n///\r\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\r\n///  @include media(\">2.0rem\") {}\r\n///\r\n///\t /* Generates: */\r\n///\t @media (min-width: 2.1rem) {}\r\n///\r\n$unit-intervals: (\r\n  \"px\": 1,\r\n  \"em\": 0.01,\r\n  \"rem\": 0.1\r\n) !default;\r\n///\r\n/// Generates a media query based on a list of conditions\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {List}   $conditions  - Media query conditions\r\n///\r\n/// @example scss - With a single set breakpoint\r\n///  @include media(\">phone\") { }\r\n///\r\n/// @example scss - With two set breakpoints\r\n///  @include media(\">phone\", \"<=tablet\") { }\r\n///\r\n/// @example scss - With custom values\r\n///  @include media(\">=358px\", \"<850px\") { }\r\n///\r\n/// @example scss - With set breakpoints with custom values\r\n///  @include media(\">desktop\", \"<=1350px\") { }\r\n///\r\n/// @example scss - With a static expression\r\n///  @include media(\"retina2x\") { }\r\n///\r\n/// @example scss - Mixing everything\r\n///  @include media(\">=350px\", \"<tablet\", \"retina3x\") { }\r\n///\r\n@mixin media($conditions...) {\r\n  @for $i from 1 through length($conditions) {\r\n    $conditions: set-nth(\r\n      $conditions,\r\n      $i,\r\n      parse-expression(nth($conditions, $i))\r\n    );\r\n  }\r\n\r\n  $branches: get-query-branches($conditions);\r\n  $query: \"\";\r\n\r\n  @each $branch in $branches {\r\n    @if (str-length($query) != 0) {\r\n      $query: $query + \", \";\r\n    }\r\n\r\n    $query: $query + $branch;\r\n  }\r\n\r\n  @media #{$query} {\r\n    @content;\r\n  }\r\n}\r\n\r\n///\r\n/// Reads a list of media query expressions and separates logical disjunctions into different branches\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {List}   $expressions  - list of expressions\r\n///\r\n/// @throws `$expression` is not a valid expression\r\n///\r\n/// @return {List | Null}\r\n///\r\n@function get-query-branches($expressions) {\r\n  $result: \"\";\r\n  $has-groups: false;\r\n\r\n  // Getting initial snapshot and looking for groups\r\n  @each $expression in $expressions {\r\n    @if (str-length($result) != 0) {\r\n      $result: $result + \" and \";\r\n    }\r\n\r\n    @if (type-of($expression) == \"string\") {\r\n      $result: $result + $expression;\r\n    } @else if (type-of($expression) == \"list\") {\r\n      $result: $result + nth($expression, 1);\r\n      $has-groups: true;\r\n    } @else {\r\n      @warn '#{$expression} is not a valid expression.';\r\n    }\r\n  }\r\n\r\n  // If we have groups, we have to create all possible combinations\r\n  @if $has-groups {\r\n    @each $expression in $expressions {\r\n      @if (type-of($expression) == \"list\") {\r\n        $first: nth($expression, 1);\r\n\r\n        @each $member in $expression {\r\n          @if ($member != $first) {\r\n            @each $partial in $result {\r\n              $result: join(\r\n                $result,\r\n                str-replace-first($first, $member, $partial)\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  @return $result;\r\n}\r\n\r\n///\r\n/// Parses a string to form a media query expression\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {String}   $expression  - expression (in string)\r\n///\r\n/// @throws Expression with type `type-of($expression)` detected, string expected\r\n/// @throws `$expression` is missing an operator\r\n/// @throws Unknown unit: `$unit`\r\n///\r\n/// @return {String | Null}\r\n///\r\n@function parse-expression($expression) {\r\n  $operator: \"\";\r\n  $value: \"\";\r\n  $element: \"\";\r\n  $result: \"\";\r\n  $is-width: true;\r\n\r\n  @if (type-of($expression) != \"string\") {\r\n    @warn 'Expression with type `#{type-of($expression)}` detected, string expected.';\r\n  }\r\n\r\n  // Separating the operator from the rest of the expression\r\n  @if (str-slice($expression, 2, 2) == \"=\") {\r\n    $operator: str-slice($expression, 1, 2);\r\n    $value: str-slice($expression, 3);\r\n  } @else {\r\n    $operator: str-slice($expression, 1, 1);\r\n    $value: str-slice($expression, 2);\r\n  }\r\n\r\n  // Checking what type of expression we're dealing with\r\n  @if map-has-key($breakpoints, $value) {\r\n    $result: map-get($breakpoints, $value);\r\n  } @else if map-has-key($media-expressions, $expression) {\r\n    $result: map-get($media-expressions, $expression);\r\n    $is-width: false;\r\n  } @else {\r\n    $result: to-number($value);\r\n  }\r\n\r\n  @if ($is-width) {\r\n    $unit: unit($result);\r\n    $interval: 0;\r\n\r\n    @if (map-has-key($unit-intervals, $unit)) {\r\n      $interval: map-get($unit-intervals, $unit);\r\n    } @else {\r\n      @warn 'Unknown unit: #{$unit}';\r\n    }\r\n\r\n    @if ($operator == \">\") {\r\n      $element: \"(min-width: #{$result + $interval})\";\r\n    } @else if ($operator == \"<\") {\r\n      $element: \"(max-width: #{$result - $interval})\";\r\n    } @else if ($operator == \">=\") {\r\n      $element: \"(min-width: #{$result})\";\r\n    } @else if ($operator == \"<=\") {\r\n      $element: \"(max-width: #{$result})\";\r\n    } @else {\r\n      @warn '#{$expression} is missing an operator.';\r\n    }\r\n  } @else {\r\n    $element: $result;\r\n  }\r\n\r\n  @return $element;\r\n}\r\n\r\n///\r\n/// Replaces the first occurence of the string with the replacement string\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {String}   $search  - The value being searched for\r\n/// @param {String}   $replace  - The replacement string\r\n/// @param {String}   $subject  - The string being replaced on\r\n///\r\n/// @return {String | Null}\r\n///\r\n@function str-replace-first($search, $replace, $subject) {\r\n  $search-start: str-index($subject, $search);\r\n\r\n  @if $search-start == null {\r\n    @return $subject;\r\n  }\r\n\r\n  $result: str-slice($subject, 0, $search-start - 1);\r\n  $result: $result + $replace;\r\n  $result: $result + str-slice($subject, $search-start + str-length($search));\r\n\r\n  @return $result;\r\n}\r\n\r\n///\r\n/// Casts a number to a string\r\n///\r\n/// @author Hugo Giraudel\r\n///\r\n/// @param {String}   $string  - Number to be parsed\r\n///\r\n/// @return {List | Null}\r\n///\r\n@function to-number($string) {\r\n  // Matrices\r\n  $strings: \"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\";\r\n  $numbers: 0 1 2 3 4 5 6 7 8 9;\r\n\r\n  // Result\r\n  $result: 0;\r\n  $divider: 0;\r\n  $minus: false;\r\n\r\n  // Looping through all characters\r\n  @for $i from 1 through str-length($string) {\r\n    $character: str-slice($string, $i, $i);\r\n    $index: index($strings, $character);\r\n\r\n    @if $character == \"-\" {\r\n      $minus: true;\r\n    } @else if $character == \".\" {\r\n      $divider: 1;\r\n    } @else {\r\n      @if type-of($index) != \"number\" {\r\n        $result: if($minus, $result * -1, $result);\r\n        @return _length($result, str-slice($string, $i));\r\n      }\r\n\r\n      $number: nth($numbers, $index);\r\n\r\n      @if $divider == 0 {\r\n        $result: $result * 10;\r\n      } @else {\r\n        // Move the decimal dot to the left\r\n        $divider: $divider * 10;\r\n        $number: $number / $divider;\r\n      }\r\n\r\n      $result: $result + $number;\r\n    }\r\n  }\r\n\r\n  @return if($minus, $result * -1, $result);\r\n}\r\n\r\n@function _length($number, $unit) {\r\n  $strings: \"px\" \"cm\" \"mm\" \"%\" \"ch\" \"pica\" \"in\" \"em\" \"rem\" \"pt\" \"pc\" \"ex\" \"vw\"\r\n    \"vh\" \"vmin\" \"vmax\";\r\n  $units: 1px 1cm 1mm 1% 1ch 1pica 1in 1em 1rem 1pt 1pc 1ex 1vw 1vh 1vmin 1vmax;\r\n  $index: index($strings, $unit);\r\n\r\n  @if type-of($index) != \"number\" {\r\n    @warn 'Unknown unit `#{$unit}`.';\r\n    @return false;\r\n  }\r\n\r\n  @return $number * nth($units, $index);\r\n}\r\n\r\n/**\r\n*\r\n* Testing\r\n*\r\n**/","@import \"../assets/breakpoints/breakpoints.scss\";\r\n\r\n.cont2{\r\n    visibility: hidden;\r\n}\r\n.dropdown{\r\n    display: inline-block; \r\n    visibility: visible;\r\n    position: absolute;\r\n    transition: .6s;\r\n    z-index: 1000; \r\n     height: calc(100vh - 70px);\r\n    width: 100%; \r\n   \r\n    ul{\r\n        background-color: #181818;\r\n        margin-top: 0;\r\n    }\r\n    li{\r\n        padding: 1rem 0;\r\n        list-style: none;\r\n        margin: 1rem 0;\r\n        border-bottom: 2px solid rgba(0,0,0,0.5);\r\n        a{\r\n            text-decoration: none;\r\n        }\r\n    }\r\n}\r\n@include media(\">tablet\"){\r\n    .games-mobile{\r\n        display: none;\r\n    }\r\n    \r\n}\r\n@include media(\"<=tablet\"){\r\n div{\r\n    margin: 0;\r\n    padding: 0;\r\n    .games-mobile{\r\n        img{\r\n            width: 5rem;\r\n            \r\n        }\r\n    nav{\r\n        display: flex;\r\n        justify-content: space-between;\r\n    }\r\n    .carrosel{\r\n        img{\r\n            width: 100%;\r\n        }\r\n    }\r\n    .games-text{\r\n        margin: 2rem ;\r\n        span{\r\n            color: black;\r\n            background-color: antiquewhite;\r\n        }\r\n    }\r\n }\r\n}\r\n}","@import \"../assets/breakpoints/breakpoints.scss\";\r\n\r\n\r\n$background:#181818;\r\n$text-color:#fff;\r\nh1,h2,h3,h4,h5,p,span,a{\r\n    color: $text-color;\r\n}\r\n.games{\r\n    display: flex;\r\n    align-content: center;\r\n    background-color: $background;\r\n    @include media(\"<952px\",\">=tablet\"){\r\n        display: flex;\r\n        flex-direction: column;\r\n        background-color: $background;\r\n        .games-text{\r\n            text-align: start;\r\n            p{\r\n                max-width: 30rem;\r\n                margin-right: 20px;\r\n            }\r\n        }\r\n    }\r\n    ///para mudar o conteúdo apresentado\r\n    @include media(\"<=tablet\") {\r\n        display: none;\r\n    // remove todo o  conteúdo e aprensenta um novo\r\n    }\r\n    span{\r\n        font-size: 1rem;\r\n    }\r\n    h1{\r\n        font-size: 3rem;\r\n        line-height: 0rem;\r\n    }\r\n    h3{\r\n        font-size: 1rem;\r\n    }\r\n    h5{\r\n        font-size:1rem ;\r\n    }\r\n    .games-text{\r\n    margin: 100px 200px;\r\n    width: 100%;\r\n}\r\n.games-img{\r\n    display: grid;\r\n    grid-template-columns: auto auto;\r\n    margin: 100px 50px 0 0;\r\n\r\n    div{\r\n        width: 80%;\r\n        padding: 1.2rem;\r\n        margin: 0px 5px 5px 5px;\r\n        text-align: start;\r\n        box-shadow: 0 6px 6px hsl(0deg 0% 0% /0.3);\r\n        border-radius: 10px;\r\n        img{\r\n        width: 100%;\r\n    }\r\n    p{\r\n        font-size: .7rem;\r\n        line-height: 1.4rem;\r\n    }\r\n}    \r\n}\r\n}\r\n\r\n//@include media(\"<=phone\"){}\r\n//@include media(\">phone\",\"<=425\"){}\r\n//@include media(\">=tablet\",\"<desktop\"){}\r\n","@import '../assets/breakpoints/breakpoints.scss';\r\n$background:#181818;\r\n$text-color:#fff;\r\nh1,h2,h3,h4,h5,p,span,a{\r\n    color: $text-color;\r\n}\r\n.cases{\r\n    span{\r\n        font-size: 1rem;\r\n    }\r\n    h1{\r\n        font-size: 3rem;\r\n        line-height: 0rem;\r\n    }\r\n    h3{\r\n        font-size: 1.2rem;\r\n    }\r\n    h5{\r\n        font-size:1rem ;\r\n    }\r\n    .cases-text{\r\n        @include media(\">718px\"){\r\n            margin: 20px 200px;\r\n            width: 30rem;\r\n        }\r\n    @include media(\"<=700px\"){\r\n        margin: 0 0 0 0;\r\n    }\r\n\r\n    @include media(\"<=tablet\",\"<699px\"){\r\n        max-width: 90%;\r\n        margin: auto;\r\n        text-align: start;\r\n    }\r\n}\r\n.cases-cards{\r\n    @include media(\">=719px\"){\r\n        margin: 20px 200px;\r\n        display: flex;\r\n        justify-content: center;\r\n    }\r\n\r\n    @include media(\">=576px\",\"<719px\"){\r\n        display: grid;\r\n        grid-template-columns: auto auto;\r\n       \r\n    }\r\n    @include media(\"<576px\"){\r\n        display: grid;\r\n        grid-template-columns: auto;\r\n        justify-items: center;\r\n       div{\r\n        width: 100%;\r\n\r\n       }\r\n        \r\n    }\r\n    div{\r\n        width: 15rem;\r\n        height: 17rem;\r\n        margin: 20px;\r\n        text-align: start;\r\n        box-shadow: 0 6px 6px hsl(0deg 0% 0% /0.3);\r\n        border-radius: 10px;\r\n        background-color: rgb(145, 133, 133);\r\n        img{\r\n        width: 100%;\r\n    }\r\n    p{\r\n        font-size: .7rem;\r\n        line-height: 1.4rem;\r\n       \r\n    }\r\n}    \r\n}\r\n}\r\n","$background:#181818;\r\n div{\r\n     background-color: $background;\r\n }","@import '../assets/breakpoints/breakpoints.scss';\r\n\r\n.body{\r\ndisplay: flex;\r\nalign-items: center;\r\n@include media(\"<=tablet\"){\r\n  display: block;\r\n}\r\n.contact-form{\r\n    margin: 100px 200px;\r\n    p{\r\n      width: 20rem;\r\n      margin: auto 0;\r\n      margin-bottom: 20px;\r\n      @include media(\"<=tablet\"){\r\n        margin: auto;\r\n      }\r\n    }\r\n    Form{\r\n      width: 50%;\r\n    }\r\n    @include media(\"<=tablet\"){\r\n      margin: auto;\r\n      width: 100%;\r\n      text-align: center;\r\n      form{\r\n        margin: auto;\r\n      }\r\n    }\r\n\r\n    ul {\r\n        padding: 0;\r\n        margin: 0;\r\n    \r\n        li {\r\n          padding: 0;\r\n          margin: 0;\r\n          list-style: none;\r\n          margin-bottom: 10px;\r\n          overflow: hidden;\r\n          display: block;\r\n          clear: both;\r\n          position: relative;\r\n        }\r\n    \r\n        li.half {\r\n          width: 49%;\r\n          margin-left:1%;\r\n          float: right;\r\n          clear: none;\r\n          \r\n        }\r\n      }\r\n      input[type='text'],\r\n      input[type='email'],\r\n      input[type='tel'] {\r\n        width: 100%;\r\n        border: 0;\r\n        background: #616263;\r\n        height: 50px;\r\n        font-size: 16px;\r\n        color: #fff;\r\n        padding: 0 20px;\r\n        box-sizing: border-box;\r\n      }\r\n    \r\n      textarea {\r\n        width: 100%;\r\n        border: 0;\r\n        background: #616263;\r\n        height: 50px;\r\n        font-size: 16px;\r\n        color: #fff;\r\n        padding: 20px;\r\n        box-sizing: border-box;\r\n        min-height: 150px;\r\n      }\r\n    \r\n    \r\n      .flat-button {\r\n        color: #ffd700;\r\n        font-size: 11px;\r\n        letter-spacing: 3px;\r\n        text-decoration: none;\r\n        padding: 8px 10px;\r\n        border: 1px solid #ffd700;\r\n        float: left;\r\n        border-radius: 4px;\r\n        background: 0 0;\r\n        text-transform: uppercase;\r\n        float: right;\r\n        text-align: center;\r\n        margin-right: 10px;\r\n        cursor: pointer;\r\n      }\r\n    }\r\n\r\n    .more-information{\r\n      \r\n      @include media(\">=718px\"){\r\n        display: grid;\r\n        grid-template-columns: auto auto auto;\r\n        justify-items: center;\r\n        margin: 0 0px  0px -100px;\r\n        padding: 3rem;\r\n\r\n      }\r\n      @include media(\"<718px\"){\r\n        display: grid;\r\n        grid-template-columns: auto auto auto;\r\n        justify-items: center;\r\n        padding: 4rem;\r\n       \r\n\r\n      }\r\n      \r\n      }\r\n    } \r\n  // @include media(\">718px\"){\r\n//     margin: 20px 200px;\r\n//     width: 30rem;\r\n// }\r\n// @include media(\"<=700px\"){\r\n// margin: 0 0 0 0;\r\n// }\r\n\r\n// @include media(\"<=tablet\",\"<699px\"){\r\n// max-width: 90%;\r\n// margin: auto;\r\n// text-align: start;\r\n"],"names":[],"sourceRoot":""}